{
  "version": "48.0.0",
  "artifacts": {
    "LineMessagingApiMockStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "LineMessagingApiMockStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "LineMessagingApiMockStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://643202082981/ap-northeast-1",
      "properties": {
        "templateFile": "LineMessagingApiMockStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::643202082981:role/cdk-hnb659fds-deploy-role-643202082981-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::643202082981:role/cdk-hnb659fds-cfn-exec-role-643202082981-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-643202082981-ap-northeast-1/6e2921ec5ffb6cd650bff479c81bfc3ecb25413a82bd50e9c64aebda11af0a9e.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "LineMessagingApiMockStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::643202082981:role/cdk-hnb659fds-lookup-role-643202082981-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "LineMessagingApiMockStack.assets"
      ],
      "metadata": {
        "/LineMessagingApiMockStack/LineMessagingApiMockBucket": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "bucketName": "*",
              "removalPolicy": "destroy",
              "autoDeleteObjects": true
            }
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineMessagingApiMockBucket163462C4"
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockBucket/Policy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "bucket": "*"
            }
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineMessagingApiMockBucketPolicy256F0782"
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockBucket/AutoDeleteObjectsCustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockBucket/AutoDeleteObjectsCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineMessagingApiMockBucketAutoDeleteObjectsCustomResource366A2574"
          }
        ],
        "/LineMessagingApiMockStack/Custom::S3AutoDeleteObjectsCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/LineMessagingApiMockStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
          }
        ],
        "/LineMessagingApiMockStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F"
          }
        ],
        "/LineMessagingApiMockStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/HandlerLogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "logGroupName": "*",
              "removalPolicy": "destroy",
              "retention": 365
            }
          }
        ],
        "/LineMessagingApiMockStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/HandlerLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderHandlerLogGroup397C0130"
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandlerRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandlerRole/ImportLineMessagingApiMockHandlerRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandlerRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineMessagingApiMockHandlerRole30AFAD31"
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandlerRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandlerRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineMessagingApiMockHandlerRoleDefaultPolicy516E003A"
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandlerLogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "removalPolicy": "retain-on-update-or-delete",
              "retention": 365
            }
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandlerLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineMessagingApiMockHandlerLogGroup44C7D70C"
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandler": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "runtime": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "entry": "*",
              "functionName": "*",
              "bundling": {
                "externalModules": "*",
                "tsconfig": "*"
              },
              "environment": "*",
              "code": "*",
              "handler": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "runtime": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "entry": "*",
              "functionName": "*",
              "bundling": {
                "externalModules": "*",
                "tsconfig": "*"
              },
              "environment": "*"
            }
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandler/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineMessagingApiMockHandler53EC5DEF"
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandler/FunctionUrl": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "function": "*",
              "authType": "NONE"
            }
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandler/FunctionUrl/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineMessagingApiMockHandlerFunctionUrlBACC71E8"
          }
        ],
        "/LineMessagingApiMockStack/LineMessagingApiMockHandler/invoke-function-url": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineMessagingApiMockHandlerinvokefunctionurl0EFEE7EC"
          }
        ],
        "/LineMessagingApiMockStack/Exports/Output{\"Fn::GetAtt\":[\"LineMessagingApiMockHandlerFunctionUrlBACC71E8\",\"FunctionUrl\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttLineMessagingApiMockHandlerFunctionUrlBACC71E8FunctionUrlA76D3756"
          }
        ],
        "/LineMessagingApiMockStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/LineMessagingApiMockStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "LineMessagingApiMockStack"
    },
    "IntegTestStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "IntegTestStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "IntegTestStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://643202082981/ap-northeast-1",
      "properties": {
        "templateFile": "IntegTestStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::643202082981:role/cdk-hnb659fds-deploy-role-643202082981-ap-northeast-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::643202082981:role/cdk-hnb659fds-cfn-exec-role-643202082981-ap-northeast-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-643202082981-ap-northeast-1/7275eaa4119a61973f570557ca4a67b629e91f643e0fa9c39d1af3c60aecf51c.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "IntegTestStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::643202082981:role/cdk-hnb659fds-lookup-role-643202082981-ap-northeast-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "LineMessagingApiMockStack",
        "IntegTestStack.assets"
      ],
      "metadata": {
        "/IntegTestStack/LineNotificationConstruct/NotificationTopicLoggingRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              }
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/NotificationTopicLoggingRole/ImportNotificationTopicLoggingRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/NotificationTopicLoggingRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineNotificationConstructNotificationTopicLoggingRoleD4E69E45"
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/NotificationTopicLoggingRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/NotificationTopicLoggingRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineNotificationConstructNotificationTopicLoggingRoleDefaultPolicy386C5713"
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/NotificationTopic": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "topicName": "*",
              "displayName": "*",
              "enforceSSL": true,
              "loggingConfigs": [
                {
                  "protocol": "lambda",
                  "failureFeedbackRole": "*",
                  "successFeedbackSampleRate": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addLoggingConfig": [
                {
                  "protocol": "lambda",
                  "failureFeedbackRole": "*",
                  "successFeedbackSampleRate": "*"
                }
              ]
            }
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/NotificationTopic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineNotificationConstructNotificationTopicE4CBF5A0"
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/NotificationTopic/Policy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "topics": [
                "*"
              ]
            }
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/NotificationTopic/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineNotificationConstructNotificationTopicPolicy38D7AE12"
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/LineNotificationHandlerRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/LineNotificationHandlerRole/ImportLineNotificationHandlerRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/LineNotificationHandlerRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineNotificationConstructLineNotificationHandlerRole184B36DA"
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/LineNotificationHandlerLogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "removalPolicy": "retain-on-update-or-delete",
              "retention": 365
            }
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/LineNotificationHandlerLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineNotificationConstructLineNotificationHandlerLogGroup0D100642"
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/LineNotificationHandler": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "runtime": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "entry": "*",
              "functionName": "*",
              "bundling": {
                "externalModules": "*",
                "tsconfig": "*"
              },
              "environment": "*",
              "events": "*",
              "code": "*",
              "handler": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "runtime": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "entry": "*",
              "functionName": "*",
              "bundling": {
                "externalModules": "*",
                "tsconfig": "*"
              },
              "environment": "*",
              "events": "*"
            }
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/LineNotificationHandler/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineNotificationConstructLineNotificationHandler196C8691"
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/LineNotificationHandler/AllowInvoke:IntegTestStackLineNotificationConstructNotificationTopic205E1087": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineNotificationConstructLineNotificationHandlerAllowInvokeIntegTestStackLineNotificationConstructNotificationTopic205E108797B05EC8"
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/LineNotificationHandler/NotificationTopic": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "topic": "*",
              "endpoint": "*",
              "protocol": "lambda",
              "filterPolicy": "*",
              "filterPolicyWithMessageBody": "*",
              "region": "*",
              "deadLetterQueue": "*"
            }
          }
        ],
        "/IntegTestStack/LineNotificationConstruct/LineNotificationHandler/NotificationTopic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LineNotificationConstructLineNotificationHandlerNotificationTopicFC4F915E"
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandlerRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandlerRole/ImportCostScheduleNotificationHandlerRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandlerRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CostScheduleNotificationConstructCostScheduleNotificationHandlerRoleBF14AF54"
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandlerRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandlerRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CostScheduleNotificationConstructCostScheduleNotificationHandlerRoleDefaultPolicyE63C8C25"
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandlerLogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "removalPolicy": "retain-on-update-or-delete",
              "retention": 365
            }
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandlerLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CostScheduleNotificationConstructCostScheduleNotificationHandlerLogGroup293A52C4"
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandler": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "runtime": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "entry": "*",
              "functionName": "*",
              "bundling": {
                "externalModules": "*",
                "tsconfig": "*"
              },
              "environment": "*",
              "onSuccess": "*",
              "onFailure": "*",
              "code": "*",
              "handler": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "runtime": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "entry": "*",
              "functionName": "*",
              "bundling": {
                "externalModules": "*",
                "tsconfig": "*"
              },
              "environment": "*",
              "onSuccess": "*",
              "onFailure": "*"
            }
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandler/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CostScheduleNotificationConstructCostScheduleNotificationHandler917D5237"
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandler/EventInvokeConfig": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "function": "*",
              "onFailure": "*",
              "onSuccess": "*",
              "maxEventAge": "*",
              "retryAttempts": "*"
            }
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostScheduleNotificationHandler/EventInvokeConfig/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CostScheduleNotificationConstructCostScheduleNotificationHandlerEventInvokeConfig30AE1961"
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostNotificationSchedulerRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              }
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostNotificationSchedulerRole/ImportCostNotificationSchedulerRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostNotificationSchedulerRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CostScheduleNotificationConstructCostNotificationSchedulerRoleEF98CEDD"
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostNotificationSchedulerRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostNotificationSchedulerRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CostScheduleNotificationConstructCostNotificationSchedulerRoleDefaultPolicyA672125A"
          }
        ],
        "/IntegTestStack/CostScheduleNotificationConstruct/CostNotificationSchedule": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CostScheduleNotificationConstructCostNotificationScheduleAA10C610"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartTopicLoggingRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              }
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartTopicLoggingRole/ImportBudgetAlartTopicLoggingRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartTopicLoggingRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartTopicLoggingRole870C03D2"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartTopicLoggingRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartTopicLoggingRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartTopicLoggingRoleDefaultPolicyB0F4D9E5"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartTopic": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "topicName": "*",
              "displayName": "*",
              "enforceSSL": true,
              "loggingConfigs": [
                {
                  "protocol": "lambda",
                  "failureFeedbackRole": "*",
                  "successFeedbackSampleRate": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addLoggingConfig": [
                {
                  "protocol": "lambda",
                  "failureFeedbackRole": "*",
                  "successFeedbackSampleRate": "*"
                }
              ]
            }
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartTopic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartTopicCDCEEA28"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartTopic/Policy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "topics": [
                "*"
              ]
            }
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartTopic/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartTopicPolicyB18977E7"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandlerRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandlerRole/ImportBudgetAlartHandlerRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandlerRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartHandlerRole3AD4F998"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandlerRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandlerRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartHandlerRoleDefaultPolicy8C8EB4A8"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandlerLogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "removalPolicy": "retain-on-update-or-delete",
              "retention": 365
            }
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandlerLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartHandlerLogGroup7D1272DB"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandler": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "runtime": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "entry": "*",
              "functionName": "*",
              "bundling": {
                "externalModules": "*",
                "tsconfig": "*"
              },
              "environment": "*",
              "events": "*",
              "onSuccess": "*",
              "onFailure": "*",
              "code": "*",
              "handler": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "runtime": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "entry": "*",
              "functionName": "*",
              "bundling": {
                "externalModules": "*",
                "tsconfig": "*"
              },
              "environment": "*",
              "events": "*",
              "onSuccess": "*",
              "onFailure": "*"
            }
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandler/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartHandlerC771814E"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandler/AllowInvoke:IntegTestStackBudgetAlartConstructBudgetAlartTopic6878672E": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartHandlerAllowInvokeIntegTestStackBudgetAlartConstructBudgetAlartTopic6878672E79CE2DF6"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandler/BudgetAlartTopic": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "topic": "*",
              "endpoint": "*",
              "protocol": "lambda",
              "filterPolicy": "*",
              "filterPolicyWithMessageBody": "*",
              "region": "*",
              "deadLetterQueue": "*"
            }
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandler/BudgetAlartTopic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartHandlerBudgetAlartTopic7F21034C"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandler/EventInvokeConfig": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "function": "*",
              "onFailure": "*",
              "onSuccess": "*",
              "maxEventAge": "*",
              "retryAttempts": "*"
            }
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/BudgetAlartHandler/EventInvokeConfig/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructBudgetAlartHandlerEventInvokeConfig1EC94A04"
          }
        ],
        "/IntegTestStack/BudgetAlartConstruct/MonthlyCostBudget": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BudgetAlartConstructMonthlyCostBudgetDA307CF9"
          }
        ],
        "/IntegTestStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/IntegTestStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "IntegTestStack"
    },
    "DataFlowTestDefaultTestDeployAssert0E9374E1.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "DataFlowTestDefaultTestDeployAssert0E9374E1.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "DataFlowTestDefaultTestDeployAssert0E9374E1": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "DataFlowTestDefaultTestDeployAssert0E9374E1.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/ef9b01823d4e7276941c6bdec0f4f223054b346db0fc6090cae082cc2376680b.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "DataFlowTestDefaultTestDeployAssert0E9374E1.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "DataFlowTestDefaultTestDeployAssert0E9374E1.assets"
      ],
      "metadata": {
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCallbudgetsUpdateBudgetead4a4a699852e842dd2dbe5ffda6862/Default": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCallbudgetsUpdateBudgetead4a4a699852e842dd2dbe5ffda6862/Default/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AwsApiCallbudgetsUpdateBudgetead4a4a699852e842dd2dbe5ffda6862"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/SingletonFunction1488541a7b23466481b69b4408076b81/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/SingletonFunction1488541a7b23466481b69b4408076b81/LogGroup": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SingletonFunction1488541a7b23466481b69b4408076b81LogGroupB3CD1BAA"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/SingletonFunction1488541a7b23466481b69b4408076b81/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCalllambdaInvokeaef4e29ae1b63c7c3e67b0982c78c329/Default": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCalllambdaInvokeaef4e29ae1b63c7c3e67b0982c78c329/Default/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AwsApiCalllambdaInvokeaef4e29ae1b63c7c3e67b0982c78c329"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546b/Default": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546b/Default/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546b"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546b/WaitFor/IsCompleteProvider/Invoke": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546bWaitForIsCompleteProviderInvoke988E71C3"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546b/WaitFor/TimeoutProvider/Invoke": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546bWaitForTimeoutProviderInvoke5DB6BB5E"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546b/WaitFor/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546bWaitForRoleE9F8206A"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546b/WaitFor/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546bWaitFor563A32CD"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/AwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546b/AssertionResults": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AssertionResultsAwsApiCalls3ListObjectsV26c5350d08d29d6d29aa8cf62da5d546b"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/SingletonFunction76b3e830a873425f8453eddd85c86925/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SingletonFunction76b3e830a873425f8453eddd85c86925Role918961BB"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/SingletonFunction76b3e830a873425f8453eddd85c86925/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SingletonFunction76b3e830a873425f8453eddd85c86925Handler81461ECE"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41a/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aRoleB84BD8CE"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41a/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aHandlerADF3E6EA"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/DataFlowTest/DefaultTest/DeployAssert/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "DataFlowTest/DefaultTest/DeployAssert"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/core:enableStackNameDuplicates": {
            "recommendedValue": true,
            "explanation": "Allow multiple stacks with the same name",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "aws-cdk:enableDiffNoFail": {
            "recommendedValue": true,
            "explanation": "Make `cdk diff` not fail when there are differences",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": {
            "recommendedValue": true,
            "explanation": "DockerImageAsset properly supports `.dockerignore` files by default",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": {
            "recommendedValue": true,
            "explanation": "Fix the referencing of SecretsManager names from ARNs",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-kms:defaultKeyPolicies": {
            "recommendedValue": true,
            "explanation": "Tighten default KMS key policies",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-s3:grantWriteWithoutAcl": {
            "recommendedValue": true,
            "explanation": "Remove `PutObjectAcl` from Bucket.grantWrite",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": {
            "recommendedValue": true,
            "explanation": "Do not specify a default DesiredCount for ECS services",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-efs:defaultEncryptionAtRest": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have elastic file systems encrypted at rest by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs.",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1025.0"
}